#
# Usage:
#	Import_Source(<ROOT_PATH> <SOURCE_FILES>
#	              [FILE <FILE1> ...]
#	              [DIRECTORY <DIRECTORY1> ...]
#	              [EXTENSION <EXTENSION1> ...])
#
FUNCTION(IMPORT_SOURCE ROOT_PATH SOURCE_FILES)
	ABSOLUTE_PATH(ROOT_PATH)
	SET(SOURCE_LIST)
	SET(PARAM_LIST FILE DIRECTORY EXTENSION)
	PARAM_PARSE(PARAM_LIST ${ARGN})
	IF(FILE-FOUND)
		FOREACH(SUB_FILE ${FILE-LIST})
			SET(SUB_SOURCE_FILE ${ROOT_PATH}/${SUB_FILE})
			ABSOLUTE_PATH(SUB_SOURCE_FILE)
			LIST(APPEND SOURCE_LIST ${SUB_SOURCE_FILE})
		ENDFOREACH()
	ENDIF()
	IF(DIRECTORY-FOUND)
		SET(DIRECTORY_LIST ${DIRECTORY-LIST})
	ELSE()
		SET(DIRECTORY_LIST ".")
	ENDIF()
	IF(EXTENSION-FOUND)
		SET(EXTENSION_LIST ${EXTENSION-LIST})
	ELSE()
		SET(EXTENSION_LIST "*")
	ENDIF()
	FOREACH(SUB_DIRECTORY ${DIRECTORY_LIST})
		SET(INCLUDE_SUB_DIRECTORY ${ROOT_PATH}/${SUB_DIRECTORY})
		ABSOLUTE_PATH(INCLUDE_SUB_DIRECTORY)
		INCLUDE_DIRECTORIES(${INCLUDE_SUB_DIRECTORY})
		_INTERNAL_IMPORT_SOURCE(${INCLUDE_SUB_DIRECTORY} SUB_SOURCE_FILES ${EXTENSION_LIST})
		LIST(APPEND SOURCE_LIST ${SUB_SOURCE_FILES})
	ENDFOREACH()
	STRING(LENGTH ${ROOT_PATH} ROOT_PATH_LENGTH)
	_INTERNAL_SOURCE_GROUP(${ROOT_PATH_LENGTH} ${SOURCE_LIST})
	SET(${SOURCE_FILES} ${SOURCE_LIST} PARENT_SCOPE)
ENDFUNCTION()

FUNCTION(_INTERNAL_IMPORT_SOURCE SUB_DIRECTORY SOURCE_FILES)
	SET(SOURCE_LIST)
	IF(IS_DIRECTORY ${SUB_DIRECTORY})
		FOREACH(EXT ${ARGN})
			CMD_LS(${SUB_DIRECTORY} SUB_SOURCES)
			FOREACH(SUB_SOURCE_FILE ${SUB_SOURCES-FILE})
				IF(${SUB_SOURCE_FILE} MATCHES "[^.]*[.]${EXT}$")
					LIST(APPEND SOURCE_LIST ${SUB_SOURCE_FILE})
				ENDIF()
			ENDFOREACH()
			FOREACH(SUB_SOURCE_FOLDER ${SUB_SOURCES-FOLDER})
				_INTERNAL_IMPORT_SOURCE(${SUB_SOURCE_FOLDER} SUB_SOURCE_FILES ${ARGN})
				LIST(APPEND SOURCE_LIST ${SUB_SOURCE_FILES})
			ENDFOREACH()
		ENDFOREACH()
	ENDIF()
	SET(${SOURCE_FILES} ${SOURCE_LIST} PARENT_SCOPE)
ENDFUNCTION()

FUNCTION(_INTERNAL_SOURCE_GROUP ROOT_PATH_LENGTH)
	FOREACH(SUB_SOURCE ${ARGN})
		GET_FILENAME_COMPONENT(SUB_SOURCE_PATH ${SUB_SOURCE} PATH)
		STRING(LENGTH ${SUB_SOURCE_PATH} SUB_SOURCE_PATH_LENGTH)
		IF(${SUB_SOURCE_PATH_LENGTH} EQUAL ${ROOT_PATH_LENGTH})
			SOURCE_GROUP("" FILES ${SUB_SOURCE})
		ELSE()
			STRING(SUBSTRING ${SUB_SOURCE_PATH} ${ROOT_PATH_LENGTH} -1 SUB_SOURCE_PATH_SUBSTRING)
			STRING(REGEX REPLACE "^/" "" GROUP_SUB_DIRECTORY ${SUB_SOURCE_PATH_SUBSTRING})
			STRING(REPLACE "/" "\\" GROUP_SUB_DIRECTORY ${GROUP_SUB_DIRECTORY})
			SOURCE_GROUP(${GROUP_SUB_DIRECTORY} FILES ${SUB_SOURCE})
		ENDIF()
	ENDFOREACH()
ENDFUNCTION()
